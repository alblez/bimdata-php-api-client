<?php
/**
 * IfcApiTest
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * BIMData API
 *
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@bimdata.io
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.3.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * IfcApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class IfcApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for addIfcErrors
     *
     * Add errors to IFC.
     *
     */
    public function testAddIfcErrors()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for bulkDeleteIfcClassifications
     *
     * Remove all classifications from model's elements.
     *
     */
    public function testBulkDeleteIfcClassifications()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for bulkDeleteIfcProperties
     *
     * Delete many Property of a model.
     *
     */
    public function testBulkDeleteIfcProperties()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for bulkDeleteIfcPropertyDefinitions
     *
     * Delete many PropertyDefinitions of a model.
     *
     */
    public function testBulkDeleteIfcPropertyDefinitions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for bulkDeleteIfcUnits
     *
     * Delete many Units of a model.
     *
     */
    public function testBulkDeleteIfcUnits()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for bulkDeletePropertySet
     *
     * Delete many PropertySet of a model.
     *
     */
    public function testBulkDeletePropertySet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for bulkFullUpdateElements
     *
     * Update many elements at once (only changing fields may be defined).
     *
     */
    public function testBulkFullUpdateElements()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for bulkFullUpdateIfcProperty
     *
     * Update some fields of many properties of a model.
     *
     */
    public function testBulkFullUpdateIfcProperty()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for bulkRemoveClassificationsOfElement
     *
     * Remove many classifications from an element.
     *
     */
    public function testBulkRemoveClassificationsOfElement()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for bulkRemoveElementsFromClassification
     *
     * Remove the classifications from all elements.
     *
     */
    public function testBulkRemoveElementsFromClassification()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for bulkUpdateElements
     *
     * Update many elements at once (all field must be defined).
     *
     */
    public function testBulkUpdateElements()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for bulkUpdateIfcProperty
     *
     * Update all fields of many properties of a model.
     *
     */
    public function testBulkUpdateIfcProperty()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createAccessToken
     *
     * Create a token for this model.
     *
     */
    public function testCreateAccessToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createClassificationElementRelations
     *
     * Create association between existing classification and existing element.
     *
     */
    public function testCreateClassificationElementRelations()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createClassificationsOfElement
     *
     * Create one or many classifications to an element.
     *
     */
    public function testCreateClassificationsOfElement()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createElement
     *
     * Create an element in the model.
     *
     */
    public function testCreateElement()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createElementPropertySet
     *
     * Create a PropertySets to an element.
     *
     */
    public function testCreateElementPropertySet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createElementPropertySetProperty
     *
     * Create a property to a PropertySet.
     *
     */
    public function testCreateElementPropertySetProperty()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createElementPropertySetPropertyDefinition
     *
     * Create a Definition to a Property.
     *
     */
    public function testCreateElementPropertySetPropertyDefinition()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createElementPropertySetPropertyDefinitionUnit
     *
     * Create a Unit to a Definition.
     *
     */
    public function testCreateElementPropertySetPropertyDefinitionUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createIfcPropertyDefinition
     *
     * Create a PropertyDefinition on the model.
     *
     */
    public function testCreateIfcPropertyDefinition()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createIfcUnit
     *
     * Create a Unit on a model.
     *
     */
    public function testCreateIfcUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createLayer
     *
     * Create a layer in the model.
     *
     */
    public function testCreateLayer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createPropertySet
     *
     * Create a PropertySet.
     *
     */
    public function testCreatePropertySet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createPropertySetElementRelations
     *
     * Create association between PropertySet and element.
     *
     */
    public function testCreatePropertySetElementRelations()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createRawElements
     *
     * Create elements in an optimized format.
     *
     */
    public function testCreateRawElements()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createSpace
     *
     * Create a space in the model.
     *
     */
    public function testCreateSpace()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createSystem
     *
     * Create a system in the model.
     *
     */
    public function testCreateSystem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createZone
     *
     * Create a zone in the model.
     *
     */
    public function testCreateZone()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createZoneSpace
     *
     * Create a space in a zone.
     *
     */
    public function testCreateZoneSpace()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteAccessToken
     *
     * Delete a token.
     *
     */
    public function testDeleteAccessToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteElement
     *
     * Delete an element of a model.
     *
     */
    public function testDeleteElement()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteIfc
     *
     * Delete a model.
     *
     */
    public function testDeleteIfc()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteIfcProperty
     *
     * Delete a Property of a model.
     *
     */
    public function testDeleteIfcProperty()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteIfcPropertyDefinition
     *
     * Delete a PropertyDefinitions of a model.
     *
     */
    public function testDeleteIfcPropertyDefinition()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteIfcUnit
     *
     * Delete a Unit of a model.
     *
     */
    public function testDeleteIfcUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteLayer
     *
     * Delete a layer of a model.
     *
     */
    public function testDeleteLayer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deletePropertySet
     *
     * Delete a PropertySet of a model.
     *
     */
    public function testDeletePropertySet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteSpace
     *
     * Delete a space.
     *
     */
    public function testDeleteSpace()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteSystem
     *
     * Delete a system of a model.
     *
     */
    public function testDeleteSystem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteZone
     *
     * Delete a zone of a model.
     *
     */
    public function testDeleteZone()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteZoneSpace
     *
     * Delete a space of a zone.
     *
     */
    public function testDeleteZoneSpace()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for exportIfc
     *
     * Export IFC.
     *
     */
    public function testExportIfc()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fullUpdateAccessToken
     *
     * Update all fields of a token.
     *
     */
    public function testFullUpdateAccessToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fullUpdateElement
     *
     * Update all fields of an element.
     *
     */
    public function testFullUpdateElement()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fullUpdateElementPropertySetProperty
     *
     * Update a property from an element.
     *
     */
    public function testFullUpdateElementPropertySetProperty()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fullUpdateIfc
     *
     * Update all fields of a model.
     *
     */
    public function testFullUpdateIfc()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fullUpdateIfcProperty
     *
     * Update some fields of a Property.
     *
     */
    public function testFullUpdateIfcProperty()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fullUpdateIfcPropertyDefinition
     *
     * Update all fields of many PropertyDefinitions of a model.
     *
     */
    public function testFullUpdateIfcPropertyDefinition()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fullUpdateIfcUnit
     *
     * Update all fields of a Unit of a model.
     *
     */
    public function testFullUpdateIfcUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fullUpdateLayer
     *
     * Update all fields of a layer.
     *
     */
    public function testFullUpdateLayer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fullUpdateProcessorHandler
     *
     * Update the status of a processor handler.
     *
     */
    public function testFullUpdateProcessorHandler()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fullUpdatePropertySet
     *
     * Update all fields of a PropertySet.
     *
     */
    public function testFullUpdatePropertySet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fullUpdateSpace
     *
     * Update all fields of a space.
     *
     */
    public function testFullUpdateSpace()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fullUpdateSystem
     *
     * Update all fields of a system.
     *
     */
    public function testFullUpdateSystem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fullUpdateZone
     *
     * Update all fields of a zone.
     *
     */
    public function testFullUpdateZone()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fullUpdateZoneSpace
     *
     * Update all fields of a space.
     *
     */
    public function testFullUpdateZoneSpace()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAccessToken
     *
     * Retrieve one token created for this model.
     *
     */
    public function testGetAccessToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAccessTokens
     *
     * Retrieve all tokens created for this model.
     *
     */
    public function testGetAccessTokens()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getClassificationsOfElement
     *
     * Retrieve all classifications of an element.
     *
     */
    public function testGetClassificationsOfElement()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getElement
     *
     * Retrieve an element of a model.
     *
     */
    public function testGetElement()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getElementPropertySet
     *
     * Retrieve a PropertySet of an element.
     *
     */
    public function testGetElementPropertySet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getElementPropertySetProperties
     *
     * Retrieve all Properties of a PropertySet.
     *
     */
    public function testGetElementPropertySetProperties()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getElementPropertySetProperty
     *
     * Retrieve a Property of a PropertySet.
     *
     */
    public function testGetElementPropertySetProperty()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getElementPropertySetPropertyDefinition
     *
     * Retrieve a Definition of a Property.
     *
     */
    public function testGetElementPropertySetPropertyDefinition()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getElementPropertySetPropertyDefinitionUnit
     *
     * Retrieve a Unit of a Definition.
     *
     */
    public function testGetElementPropertySetPropertyDefinitionUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getElementPropertySetPropertyDefinitionUnits
     *
     * Retrieve all Units of a Definition.
     *
     */
    public function testGetElementPropertySetPropertyDefinitionUnits()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getElementPropertySetPropertyDefinitions
     *
     * Retrieve all Definitions of a PropertySet.
     *
     */
    public function testGetElementPropertySetPropertyDefinitions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getElementPropertySets
     *
     * Retrieve all PropertySets of an element.
     *
     */
    public function testGetElementPropertySets()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getElements
     *
     * Retrieve all elements of a model.
     *
     */
    public function testGetElements()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getElementsFromClassification
     *
     * Retrieve all elements with the classification.
     *
     */
    public function testGetElementsFromClassification()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getIfc
     *
     * Retrieve one model.
     *
     */
    public function testGetIfc()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getIfcBVH
     *
     * Get svg file.
     *
     */
    public function testGetIfcBVH()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getIfcClassifications
     *
     * Retrieve all classifications in a model.
     *
     */
    public function testGetIfcClassifications()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getIfcGLTF
     *
     * Get gltf file.
     *
     */
    public function testGetIfcGLTF()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getIfcMap
     *
     * Get bvh file.
     *
     */
    public function testGetIfcMap()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getIfcMaterial
     *
     * Retrieve a material of a model.
     *
     */
    public function testGetIfcMaterial()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getIfcMaterials
     *
     * Retrieve all materials of a model.
     *
     */
    public function testGetIfcMaterials()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getIfcProperties
     *
     * Retrieve all Properties of a model.
     *
     */
    public function testGetIfcProperties()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getIfcProperty
     *
     * Retrieve a Property of a model.
     *
     */
    public function testGetIfcProperty()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getIfcPropertyDefinition
     *
     * Retrieve a PropertyDefinition of a model.
     *
     */
    public function testGetIfcPropertyDefinition()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getIfcPropertyDefinitions
     *
     * Retrieve all PropertyDefinitions of a model.
     *
     */
    public function testGetIfcPropertyDefinitions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getIfcStructure
     *
     * Get structure file.
     *
     */
    public function testGetIfcStructure()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getIfcSystems
     *
     * Get systems file.
     *
     */
    public function testGetIfcSystems()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getIfcUnit
     *
     * Retrieve a Unit of a model.
     *
     */
    public function testGetIfcUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getIfcUnits
     *
     * Retrieve all Units of a model.
     *
     */
    public function testGetIfcUnits()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getIfcs
     *
     * Retrieve all models.
     *
     */
    public function testGetIfcs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getLayer
     *
     * Retrieve a layer of a model.
     *
     */
    public function testGetLayer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getLayers
     *
     * Retrieve all layers of a model.
     *
     */
    public function testGetLayers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getMaterial
     *
     * Retrieve a material of a model.
     *
     */
    public function testGetMaterial()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getMaterials
     *
     * Retrieve all materials of a model.
     *
     */
    public function testGetMaterials()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getProcessorHandler
     *
     * Retrieve a processor handler.
     *
     */
    public function testGetProcessorHandler()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getProcessorHandlers
     *
     * Get all processor handlers.
     *
     */
    public function testGetProcessorHandlers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPropertySet
     *
     * Retrieve a PropertySet of a model.
     *
     */
    public function testGetPropertySet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPropertySets
     *
     * Retrieve all PropertySets of a model.
     *
     */
    public function testGetPropertySets()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getRawElements
     *
     * Retrieve all elements in a optimized format.
     *
     */
    public function testGetRawElements()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSimpleElement
     *
     * Retrieve an element of a model with a simple value representation.
     *
     */
    public function testGetSimpleElement()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSimpleElements
     *
     * Retrieve all elements of a model with a simple value representation.
     *
     */
    public function testGetSimpleElements()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSpace
     *
     * Retrieve one space of the model.
     *
     */
    public function testGetSpace()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSpaces
     *
     * Retrieve all spaces of the model.
     *
     */
    public function testGetSpaces()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSystem
     *
     * Retrieve a system of a model.
     *
     */
    public function testGetSystem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSystems
     *
     * Retrieve all systems of a model.
     *
     */
    public function testGetSystems()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getZone
     *
     * Retrieve one zone of a model.
     *
     */
    public function testGetZone()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getZoneSpace
     *
     * Retrieve one space of a zone.
     *
     */
    public function testGetZoneSpace()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getZoneSpaces
     *
     * Retrieve all spaces of a zone.
     *
     */
    public function testGetZoneSpaces()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getZones
     *
     * Retrieve zones of a model.
     *
     */
    public function testGetZones()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listClassificationElementRelations
     *
     * List all associations between classifications and elements.
     *
     */
    public function testListClassificationElementRelations()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for mergeIfcs
     *
     * Merge IFC files.
     *
     */
    public function testMergeIfcs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for optimizeIfc
     *
     * Optimize the IFC.
     *
     */
    public function testOptimizeIfc()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeAllElementPropertySet
     *
     * Remove all property sets from element.
     *
     */
    public function testRemoveAllElementPropertySet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeClassificationOfElement
     *
     * Remove a classification from an element.
     *
     */
    public function testRemoveClassificationOfElement()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeElementPropertySet
     *
     * Remove a PropertySet from an element.
     *
     */
    public function testRemoveElementPropertySet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeElementPropertySetProperty
     *
     * Remove a property from a PropertySet.
     *
     */
    public function testRemoveElementPropertySetProperty()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeElementPropertySetPropertyDefinition
     *
     * Remove a Definition from a Property.
     *
     */
    public function testRemoveElementPropertySetPropertyDefinition()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeElementPropertySetPropertyDefinitionUnit
     *
     * Remove a Unit from a Definition.
     *
     */
    public function testRemoveElementPropertySetPropertyDefinitionUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeElementsFromClassification
     *
     * Remove the classification from all elements.
     *
     */
    public function testRemoveElementsFromClassification()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for reprocessIfc
     *
     * Reprocess IFC file.
     *
     */
    public function testReprocessIfc()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateAccessToken
     *
     * Update some fields of a token.
     *
     */
    public function testUpdateAccessToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateElement
     *
     * Update some fields of an element.
     *
     */
    public function testUpdateElement()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateElementPropertySetProperty
     *
     * Update a property from an element.
     *
     */
    public function testUpdateElementPropertySetProperty()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateIfc
     *
     * Update some fields of a model.
     *
     */
    public function testUpdateIfc()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateIfcFiles
     *
     * Update models file (gltf, svg, structure, etc).
     *
     */
    public function testUpdateIfcFiles()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateIfcProperty
     *
     * Update some fields of a Property.
     *
     */
    public function testUpdateIfcProperty()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateIfcPropertyDefinition
     *
     * Update some fields of many PropertyDefinitions of a model.
     *
     */
    public function testUpdateIfcPropertyDefinition()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateIfcUnit
     *
     * Update some fields of a Unit of a model.
     *
     */
    public function testUpdateIfcUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateLayer
     *
     * Update some fields of a layer.
     *
     */
    public function testUpdateLayer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateProcessorHandler
     *
     * Update the status of a processor handler.
     *
     */
    public function testUpdateProcessorHandler()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updatePropertySet
     *
     * Update some fields of a PropertySet.
     *
     */
    public function testUpdatePropertySet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateSpace
     *
     * Update some fields of a space.
     *
     */
    public function testUpdateSpace()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateSystem
     *
     * Update some fields of a system.
     *
     */
    public function testUpdateSystem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateZone
     *
     * Update some fields of a zone.
     *
     */
    public function testUpdateZone()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateZoneSpace
     *
     * Update some fields of a space.
     *
     */
    public function testUpdateZoneSpace()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
