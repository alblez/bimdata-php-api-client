<?php
/**
 * CheckerApiTest
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * BIMData API
 *
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@bimdata.io
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.3.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * CheckerApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class CheckerApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createChecker
     *
     * Create a checker to a model.
     *
     */
    public function testCreateChecker()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createCheckerResult
     *
     * Create a CheckerResult.
     *
     */
    public function testCreateCheckerResult()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createCheckplan
     *
     * Create a Checkplan.
     *
     */
    public function testCreateCheckplan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createRule
     *
     * Create a Rule.
     *
     */
    public function testCreateRule()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createRuleComponent
     *
     * Create a RuleComponent.
     *
     */
    public function testCreateRuleComponent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createRuleset
     *
     * Create a Ruleset.
     *
     */
    public function testCreateRuleset()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteChecker
     *
     * Delete a checker of a model.
     *
     */
    public function testDeleteChecker()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteCheckerResult
     *
     * Delete a CheckerResult.
     *
     */
    public function testDeleteCheckerResult()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteCheckplan
     *
     * Delete a Checkplan.
     *
     */
    public function testDeleteCheckplan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteRule
     *
     * Delete a Rule.
     *
     */
    public function testDeleteRule()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteRuleComponent
     *
     * Delete a RuleComponent.
     *
     */
    public function testDeleteRuleComponent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteRuleset
     *
     * Delete a Ruleset.
     *
     */
    public function testDeleteRuleset()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fullUpdateChecker
     *
     * Update all fields of a checker of a model.
     *
     */
    public function testFullUpdateChecker()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fullUpdateCheckerResult
     *
     * Update all fields of a CheckerResult.
     *
     */
    public function testFullUpdateCheckerResult()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fullUpdateCheckplan
     *
     * Update all fields of a Checkplan.
     *
     */
    public function testFullUpdateCheckplan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fullUpdateRule
     *
     * Update all fields of a Rule.
     *
     */
    public function testFullUpdateRule()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fullUpdateRuleComponent
     *
     * Update all fields of a RuleComponent.
     *
     */
    public function testFullUpdateRuleComponent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fullUpdateRuleset
     *
     * Update all fields of a Ruleset.
     *
     */
    public function testFullUpdateRuleset()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getChecker
     *
     * Retrieve a checker of a model.
     *
     */
    public function testGetChecker()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCheckerResult
     *
     * Retrieve one CheckerResult.
     *
     */
    public function testGetCheckerResult()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCheckerResults
     *
     * Retrieve all CheckerResults.
     *
     */
    public function testGetCheckerResults()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCheckers
     *
     * Retrieve all checkers of a model.
     *
     */
    public function testGetCheckers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCheckplan
     *
     * Retrieve one Checkplan.
     *
     */
    public function testGetCheckplan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCheckplans
     *
     * Retrieve all Checkplans.
     *
     */
    public function testGetCheckplans()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getRule
     *
     * Retrieve one Rule.
     *
     */
    public function testGetRule()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getRuleComponent
     *
     * Retrieve one RuleComponent.
     *
     */
    public function testGetRuleComponent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getRuleComponents
     *
     * Retrieve all RuleComponents.
     *
     */
    public function testGetRuleComponents()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getRules
     *
     * Retrieve all Rules.
     *
     */
    public function testGetRules()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getRuleset
     *
     * Retrieve one Ruleset.
     *
     */
    public function testGetRuleset()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getRulesets
     *
     * Retrieve all Rulesets.
     *
     */
    public function testGetRulesets()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for launchNewCheck
     *
     * Launch a new check on the model.
     *
     */
    public function testLaunchNewCheck()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateChecker
     *
     * Update some fields of a checker of a model.
     *
     */
    public function testUpdateChecker()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateCheckerResult
     *
     * Update some fields of a CheckerResult.
     *
     */
    public function testUpdateCheckerResult()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateCheckplan
     *
     * Update some fields of a Checkplan.
     *
     */
    public function testUpdateCheckplan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateRule
     *
     * Update some fields of a Rule.
     *
     */
    public function testUpdateRule()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateRuleComponent
     *
     * Update some fields of a RuleComponent.
     *
     */
    public function testUpdateRuleComponent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateRuleset
     *
     * Update some fields of a Ruleset.
     *
     */
    public function testUpdateRuleset()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
