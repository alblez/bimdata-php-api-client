<?php
/**
 * CollaborationApiTest
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * BIMData API
 *
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@bimdata.io
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.3.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * CollaborationApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class CollaborationApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for addGroupMember
     *
     * Add a user to a group.
     *
     */
    public function testAddGroupMember()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cancelCloudUserInvitation
     *
     * Cancel a pending invitation.
     *
     */
    public function testCancelCloudUserInvitation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cancelProjectUserInvitation
     *
     * Cancel a pending invitation.
     *
     */
    public function testCancelProjectUserInvitation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for checkAccess
     *
     * Check app access from cloud.
     *
     */
    public function testCheckAccess()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createClassification
     *
     * Create a classification.
     *
     */
    public function testCreateClassification()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createCloud
     *
     * Create a cloud.
     *
     */
    public function testCreateCloud()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createDMSTree
     *
     * Create a complete DMS tree.
     *
     */
    public function testCreateDMSTree()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createDemo
     *
     * Create a Demo project in a cloud.
     *
     */
    public function testCreateDemo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createDocument
     *
     * Create a document.
     *
     */
    public function testCreateDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createFolder
     *
     * Create a folder.
     *
     */
    public function testCreateFolder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createManageGroup
     *
     * Create a group.
     *
     */
    public function testCreateManageGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createProject
     *
     * Create a project.
     *
     */
    public function testCreateProject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createProjectAccessToken
     *
     * Create a token for this project.
     *
     */
    public function testCreateProjectAccessToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteClassification
     *
     * Delete a classification.
     *
     */
    public function testDeleteClassification()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteCloud
     *
     * Delete a cloud.
     *
     */
    public function testDeleteCloud()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteCloudUser
     *
     * Remove a user from a cloud.
     *
     */
    public function testDeleteCloudUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteDocument
     *
     * Delete the document.
     *
     */
    public function testDeleteDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteFolder
     *
     * Delete a folder.
     *
     */
    public function testDeleteFolder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteGroupMember
     *
     * Delete a user from a group.
     *
     */
    public function testDeleteGroupMember()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteManageGroup
     *
     * Delete a group.
     *
     */
    public function testDeleteManageGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteProject
     *
     * Delete a project.
     *
     */
    public function testDeleteProject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteProjectAccessToken
     *
     * Delete a token.
     *
     */
    public function testDeleteProjectAccessToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteProjectUser
     *
     * Remove a user from a project.
     *
     */
    public function testDeleteProjectUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fullUpdateClassification
     *
     * Update all fields of a classification.
     *
     */
    public function testFullUpdateClassification()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fullUpdateCloud
     *
     * Update all fields of a cloud.
     *
     */
    public function testFullUpdateCloud()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fullUpdateCloudUser
     *
     * Update all fields of a cloud user.
     *
     */
    public function testFullUpdateCloudUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fullUpdateDocument
     *
     * Update all fields of the document.
     *
     */
    public function testFullUpdateDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fullUpdateFolder
     *
     * Update all fields of a folder.
     *
     */
    public function testFullUpdateFolder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fullUpdateGroupFolder
     *
     * Update the permission of a group on a folder.
     *
     */
    public function testFullUpdateGroupFolder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fullUpdateManageGroup
     *
     * Update all fields of a group.
     *
     */
    public function testFullUpdateManageGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fullUpdateProject
     *
     * Update all fields of a project.
     *
     */
    public function testFullUpdateProject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fullUpdateProjectAccessToken
     *
     * Update all fields of a token.
     *
     */
    public function testFullUpdateProjectAccessToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fullUpdateProjectUser
     *
     * Update all fields of a project user.
     *
     */
    public function testFullUpdateProjectUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getClassification
     *
     * Retrieve a classification.
     *
     */
    public function testGetClassification()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getClassifications
     *
     * Retrieve all classifications.
     *
     */
    public function testGetClassifications()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCloud
     *
     * Retrieve one cloud.
     *
     */
    public function testGetCloud()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCloudInvitations
     *
     * Retrieve all pending invitations in the cloud.
     *
     */
    public function testGetCloudInvitations()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCloudSize
     *
     * Get size of all ifc files in the cloud.
     *
     */
    public function testGetCloudSize()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCloudUser
     *
     * Retrieve a user in a cloud.
     *
     */
    public function testGetCloudUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCloudUsers
     *
     * Retrieve all users in a cloud, or a list with a filter by email.
     *
     */
    public function testGetCloudUsers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getClouds
     *
     * Retrieve all clouds.
     *
     */
    public function testGetClouds()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDocument
     *
     * Retrieve a document.
     *
     */
    public function testGetDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDocuments
     *
     * Retrieve all documents.
     *
     */
    public function testGetDocuments()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getFolder
     *
     * Retrieve a folder.
     *
     */
    public function testGetFolder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getFolders
     *
     * Retrieve all folders.
     *
     */
    public function testGetFolders()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getGroup
     *
     * Retrieve a group.
     *
     */
    public function testGetGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getGroups
     *
     * Retrieve all groups.
     *
     */
    public function testGetGroups()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getManageGroup
     *
     * Retrieve a group.
     *
     */
    public function testGetManageGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getManageGroups
     *
     * Retrieve all groups.
     *
     */
    public function testGetManageGroups()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getProject
     *
     * Retrieve a project.
     *
     */
    public function testGetProject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getProjectAccessToken
     *
     * Retrieve one token created for this project.
     *
     */
    public function testGetProjectAccessToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getProjectAccessTokens
     *
     * Retrieve all tokens created for this project.
     *
     */
    public function testGetProjectAccessTokens()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getProjectDMSTree
     *
     * Retrieve the complete DMS tree.
     *
     */
    public function testGetProjectDMSTree()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getProjectInvitations
     *
     * Retrieve all pending invitations in the project.
     *
     */
    public function testGetProjectInvitations()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getProjectSubTree
     *
     * Retrieve the complete projects tree of the cloud.
     *
     */
    public function testGetProjectSubTree()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getProjectUser
     *
     * Retrieve a user in a project.
     *
     */
    public function testGetProjectUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getProjectUsers
     *
     * Retrieve all users in a project, or a list with a filter by email.
     *
     */
    public function testGetProjectUsers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getProject_0
     *
     * Retrieve a project.
     *
     */
    public function testGetProject0()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getProjects
     *
     * Retrieve all projects.
     *
     */
    public function testGetProjects()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSelfProjects
     *
     * List current user's projects.
     *
     */
    public function testGetSelfProjects()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSelfUser
     *
     * Get info about the current user.
     *
     */
    public function testGetSelfUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for inviteCloudUser
     *
     * Invite a cloud administrator.
     *
     */
    public function testInviteCloudUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for inviteProjectUser
     *
     * Invite a project member.
     *
     */
    public function testInviteProjectUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateClassification
     *
     * Update some fields of a classification.
     *
     */
    public function testUpdateClassification()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateCloud
     *
     * Update some fields of a cloud.
     *
     */
    public function testUpdateCloud()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateCloudUser
     *
     * Update some fields of a cloud user.
     *
     */
    public function testUpdateCloudUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateDocument
     *
     * Update some fields of the document.
     *
     */
    public function testUpdateDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateFolder
     *
     * Update some fields of a folder.
     *
     */
    public function testUpdateFolder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateGroupFolder
     *
     * Update the permission of a group on a folder.
     *
     */
    public function testUpdateGroupFolder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateManageGroup
     *
     * Update some fields of a group.
     *
     */
    public function testUpdateManageGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateProject
     *
     * Update some fields of a project.
     *
     */
    public function testUpdateProject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateProjectAccessToken
     *
     * Update some fields of a token.
     *
     */
    public function testUpdateProjectAccessToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateProjectUser
     *
     * Update some fields of a project user.
     *
     */
    public function testUpdateProjectUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateSelfUser
     *
     * Update info of the current user.
     *
     */
    public function testUpdateSelfUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
